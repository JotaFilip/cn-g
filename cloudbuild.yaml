steps:



- id: 'build account'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=account', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/account',
    '--cache-from=gcr.io/$PROJECT_ID/account:latest',
    'app/protobufs/account/.',
  ]
- id: 'build signin'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=signin', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/signin',
    '--cache-from=gcr.io/$PROJECT_ID/signin:latest',
    'app/protobufs/signin/.',
  ]
  waitFor: ['-'] # start immediately

- id: 'build api_gateway'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=api_gateway', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/api_gateway',
    '--cache-from=gcr.io/$PROJECT_ID/api_gateway:latest',
    'app/protobufs/api_gateway/.',
  ]
  waitFor: ['-'] # start immediately
- id: 'build book'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=book', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/book',
    '--cache-from=gcr.io/$PROJECT_ID/book:latest',
    'app/protobufs/book/.',
  ]
  waitFor: ['-'] # start immediately
- id: 'build anime'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=anime', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/anime',
    '--cache-from=gcr.io/$PROJECT_ID/anime:latest',
    'app/protobufs/anime/.',
  ]
  waitFor: ['-'] # start immediately
- id: 'build imdb'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=imdb', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/imdb',
    '--cache-from=gcr.io/$PROJECT_ID/imdb:latest',
    'app/protobufs/imdb/.',
  ]
  waitFor: ['-'] # start immediately
- id: 'build library'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--tag=library', # use local registry for compatibility with local builds
    '--tag=gcr.io/$PROJECT_ID/library',
    '--cache-from=gcr.io/$PROJECT_ID/library:latest',
    'app/protobufs/library/.',
  ]
  waitFor: ['-'] # start immediately
- id: 'dns pull'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'pull',
    'defreitas/dns-proxy-server'
  ]
  waitFor: ['-'] # start immediately
- id: 'dns up'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'run',
    '--rm',
    '--hostname dns.mageddo',
    '-v /var/run/docker.sock:/var/run/docker.sock',
    '-v /etc/resolv.conf:/etc/resolv.conf',
    'defreitas/dns-proxy-server',
  ]
  waitFor: ['dns pull']


- id: 'compose up'
  name: 'gcr.io/$PROJECT_ID/docker-compose:latest'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    docker-compose up -d app/protobufs/docker-compose.yml
  env:
  - 'PROJECT_ID=$PROJECT_ID'
  waitFor: ['build account','build signin','build api_gateway','build book','build anime','build imdb','build library','dns up']


- id: 'integration tests'
  name: 'gcr.io/$PROJECT_ID/docker-compose:latest'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |
      ### -r = retries; -i = interval; -k = keyword to search for ###
      ./app/protobufs/api_gateway/api_gateway_test.sh -r 20 -i 3 -u https://api-gateway:5000
  waitFor: ['compose up']

images:
- gcr.io/$PROJECT_ID/imdb
- gcr.io/$PROJECT_ID/account
- gcr.io/$PROJECT_ID/signin
- gcr.io/$PROJECT_ID/api_gateway
- gcr.io/$PROJECT_ID/book
- gcr.io/$PROJECT_ID/anime
- gcr.io/$PROJECT_ID/library