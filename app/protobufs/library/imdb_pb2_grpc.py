# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import imdb_pb2 as imdb__pb2


class IMDBStub(object):
    """//////////////////////////////////////////
    //////////////////////////////////////////
    //////////////////////////////////////////

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetIMDBs = channel.unary_unary(
                '/IMDB/GetIMDBs',
                request_serializer=imdb__pb2.GetIMDBsRequest.SerializeToString,
                response_deserializer=imdb__pb2.IMDBDataList.FromString,
                )
        self.SearchById = channel.unary_unary(
                '/IMDB/SearchById',
                request_serializer=imdb__pb2.IMDBByIdRequest.SerializeToString,
                response_deserializer=imdb__pb2.IMDBData.FromString,
                )
        self.SearchByName = channel.unary_unary(
                '/IMDB/SearchByName',
                request_serializer=imdb__pb2.IMDBByNameRequest.SerializeToString,
                response_deserializer=imdb__pb2.IMDBDataList.FromString,
                )
        self.SearchByCategory = channel.unary_unary(
                '/IMDB/SearchByCategory',
                request_serializer=imdb__pb2.IMDBByCategoryRequest.SerializeToString,
                response_deserializer=imdb__pb2.IMDBDataList.FromString,
                )


class IMDBServicer(object):
    """//////////////////////////////////////////
    //////////////////////////////////////////
    //////////////////////////////////////////

    """

    def GetIMDBs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchByCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IMDBServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetIMDBs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIMDBs,
                    request_deserializer=imdb__pb2.GetIMDBsRequest.FromString,
                    response_serializer=imdb__pb2.IMDBDataList.SerializeToString,
            ),
            'SearchById': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchById,
                    request_deserializer=imdb__pb2.IMDBByIdRequest.FromString,
                    response_serializer=imdb__pb2.IMDBData.SerializeToString,
            ),
            'SearchByName': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByName,
                    request_deserializer=imdb__pb2.IMDBByNameRequest.FromString,
                    response_serializer=imdb__pb2.IMDBDataList.SerializeToString,
            ),
            'SearchByCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchByCategory,
                    request_deserializer=imdb__pb2.IMDBByCategoryRequest.FromString,
                    response_serializer=imdb__pb2.IMDBDataList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IMDB', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IMDB(object):
    """//////////////////////////////////////////
    //////////////////////////////////////////
    //////////////////////////////////////////

    """

    @staticmethod
    def GetIMDBs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IMDB/GetIMDBs',
            imdb__pb2.GetIMDBsRequest.SerializeToString,
            imdb__pb2.IMDBDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IMDB/SearchById',
            imdb__pb2.IMDBByIdRequest.SerializeToString,
            imdb__pb2.IMDBData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IMDB/SearchByName',
            imdb__pb2.IMDBByNameRequest.SerializeToString,
            imdb__pb2.IMDBDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchByCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/IMDB/SearchByCategory',
            imdb__pb2.IMDBByCategoryRequest.SerializeToString,
            imdb__pb2.IMDBDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
