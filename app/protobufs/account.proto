syntax = "proto3";
import "utils.proto";

////////////////////////////////////////////
///////////////BASIC RESPONSES//////////////
////////////////////////////////////////////
//Verificar password
//message VerificarRequest{
//    string username = 1;
//    string password = 2;
//}
//message VerificarResponse{
//    int64 id = 1;
//    bool success = 2;
//}

////////////////////////////////////////////
////////////////BASIC REQUESTS//////////////
////////////////////////////////////////////
//message EmailAndNonceRequest{
//	string email = 1;
//	string username = 2;
//	int64 nonce = 3;
//}


message UserData {
    string username = 1;
    repeated SeenAndLikeInfoReturn likes = 2;
    repeated SeenAndLikeInfoReturn seens = 3;
}

//message UserDataRequest {
//	string username = 1;
//	string password = 2;
//}

message UserRequest {
	string user_id = 1;
}

message UpdateUserRequest {
	string user_id = 1;
	string new_username = 2;
}
////////////////////////////////////////////
////////////////////////////////////////////
////////////////////////////////////////////

////////////////////////////////////////////
////////////////BASIC REQUESTS//////////////
////////////////////////////////////////////

message LikesAndViewsRequest {
    string username = 1;
}

message SeenAndLikeInfo{
    string user_id = 1;
    string id= 2;
    Type type = 3;
    repeated string categories = 4;
}


message ViewsAndLikesCount{
    repeated TupleForCategory tuples= 1;
}

message TupleForCategory{
    string category = 1;
    int64 views = 2;
    int64 likes = 3;
}
message SeenAndLikeInfoReturn{
    string id= 1;
    Type type = 2;
}
message SeenAndLikeItem{
    string id= 1;
    Type type = 2;
}
message SeensAndLikesInfo{
    repeated SeenAndLikeInfoReturn infos = 1;
}
message UserId{
    string id = 1;
}
message CountInfo{
    int64 count = 1;
}
////////////////////////////////////////////
////////////////////////////////////////////
////////////////////////////////////////////



message Count {
	int64 count = 1;
}

message TopTenRequest {
	Type type = 1;
}

////////////////////////////////////////////
////////////////////////////////////////////
////////////////////////////////////////////

service Account {
	// CriarUtilizador
	// rpc VerificaSeEhNovoECria (EmailAndNonceRequest) returns (Success);
	//Actualiza a password do user baseado no nonce enviado para o email
	// rpc UserPassword (PasswordRequest) returns (Success);
	// rpc VerificarPassword(VerificarRequest) returns (VerificarResponse);

	//rpc VerificarAdmin(UserId) returns (Success);
	//Dar login //nao usado
	// rpc LoginUser (UserDataRequest) returns (Success);
	//Dar logout //nao usado
	// rpc LogoutUser (Empty) returns (Success);

	//Parte da library
	//Marcar item como visto
	rpc Seen(SeenAndLikeInfo) returns (Success);
	//Marcar item como gostado
	rpc Like(SeenAndLikeInfo) returns (Success);
	//Obter likes do utilizador
	// rpc GetLikes(UserId) returns (SeensAndLikesInfo);
	// //Obter Visualizações do utilizador
	// rpc GetSeens(UserId) returns (SeensAndLikesInfo);
	//ObterContagem de likes do item
	rpc GetLikesItem(SeenAndLikeItem) returns (CountInfo);
	//ObterContagem de seens do item
	rpc GetSeensItem(SeenAndLikeItem) returns (CountInfo);
	//Obter contagem de likes e views por categoria deste utilizador
	rpc GetContagemLikesAndViews(UserId) returns (ViewsAndLikesCount);

	//Username
	rpc GetUserByName (UserRequest) returns (UserData);
	rpc UpdateUser (UpdateUserRequest) returns (Success);
	rpc DeleteUser (UserRequest) returns (Success);

	// GetLikes and GetViews to Account
	rpc GetViews(SeenAndLikeItem) returns(Count);
	rpc GetLikes(SeenAndLikeItem) returns(Count);

	//Get Top Ten Animes, Books or Movies
	rpc GetTopTen(TopTenRequest) returns(SeensAndLikesInfo);
}