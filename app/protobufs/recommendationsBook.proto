syntax = "proto3";

message RecommendationBookRequest {
    int32 user_id = 1;
	repeated string criteria = 2;
    int32 max_results = 3;
}

message BookCategoryRequest {
    int32 user_id = 1;
	string category = 2;
    int32 max_results = 3;
}

message BookNameRequest {
    int32 user_id = 1;
	string name = 2;
    int32 max_results = 3;
}

message BookResponse {
    int32 id = 1;
    string book_title = 2;
}

message RecommendationBookResponse {
	map<string, BookList> recommendations = 1;
}

message BookList {
    repeated BookResponse books = 1;
}

message SearchResponse {
	repeated BookResponse recommendations = 1;
}


/////////Library quer receber livros para analizar categorias em comum//////////
message BookByIdRequest {
    string book_id = 1;
}

message BookByIdResponse {
    Book book = 1;
}
/////////////////////////////////////////////////////////////////////////////////

message Book {
    //ver no dataset colunas relevantes
}

///Library quer receber livros de acordo com uma categoria que ele calculou, para recomendar////
message BookByCategoryRequest {
    string category = 1;
    int32 max_results = 2;
}

message BookByCategoryResponse {
    Book book = 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////

service RecommendationsBook {
    rpc RecommendBook (RecommendationBookRequest) returns (RecommendationBookResponse);
	rpc SearchByName (BookNameRequest) returns (SearchResponse);
	rpc SearchByCategory (BookCategoryRequest) returns (SearchResponse);
    rpc GetBookById (BookByIdRequest) returns (BookByIdResponse);
    rpc GetBookByCategory (BookByCategoryRequest) returns (BookByCategoryResponse);
}
